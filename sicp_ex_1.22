//Function that checks the whether the the integer n is a prime number, and 
// the time taken to evaluate this
function square(x) {
    return x * x;
}

function smallest_divisor(n) {
    return find_divisor(n, 2);
}

function find_divisor(n, test_divisor) {
    return square(test_divisor) > n
           ? n
           : divides(test_divisor, n)
           ? test_divisor
           : find_divisor(n, test_divisor + 1);
}
function divides(a, b) {
    return b % a === 0;
}

function is_prime(n) {
    return n === smallest_divisor(n);
}

function timed_prime_test(n) {
    display(n);
    return start_prime_test(n, get_time());
}

function start_prime_test(n, start_time) {
    return is_prime(n)
          ? report_prime(get_time() - start_time)
          : false;
}

function is_odd(n) {
    return n % 2 === 0
    ? n + 1
    : n;
}

function report_prime(elapsed_time) {
    display(" *** ");
    display(elapsed_time);
    return true;
}


//Funciton that tests for a range of numbers
function search_for_prime(start) {
    function first_three_prime(sequence, counter, is_true) {
        return counter === 3
        ? sequence
        : is_prime(is_true) && counter <= 1
        ? first_three_prime(sequence + stringify(is_true) + " ", 
        counter + 1, is_true + 2)
        : is_prime(is_true) && counter > 1
        ? first_three_prime(sequence + stringify(is_true), 
        counter + 1, is_true + 2)
        : first_three_prime(sequence,counter, is_true + 2);
    }
    return first_three_prime("", 0, is_odd(start));
}
search_for_prime(1008);


